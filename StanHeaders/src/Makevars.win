CXX_STD = CXX17
PKG_CPPFLAGS = -DNO_FPRINTF_OUTPUT -I"../inst/include" -I"sundials" -include stan_sundials_printf_override.hpp
PKG_CPPFLAGS += -DBOOST_DISABLE_ASSERTS -DBOOST_PHOENIX_NO_VARIADIC_EXPRESSION -DBOOST_NO_AUTO_PTR -D_REENTRANT -DSTAN_THREADS -DSTRICT_R_HEADERS
PKG_CXXFLAGS += -DRCPP_PARALLEL_USE_TBB=1 -DSTRICT_R_HEADERS
PKG_CPPFLAGS += -DUSE_WINTHREAD
SHLIB_LDFLAGS = $(SHLIB_CXXLDFLAGS)
SHLIB_LD = $(SHLIB_CXXLD)

SUNDIALS_CVODES := \
  $(wildcard cvodes/*.c) \
  $(wildcard sundials/*.c) \
  $(wildcard sunmatrix/band/[^f]*.c) \
  $(wildcard sunmatrix/dense/[^f]*.c) \
  $(wildcard sunlinsol/band/[^f]*.c) \
  $(wildcard sunlinsol/dense/[^f]*.c) \
  $(wildcard sunnonlinsol/newton/[^f]*.c) \
  $(wildcard sunnonlinsol/fixedpoint/[^f]*.c)

SUNDIALS_IDAS := \
  $(wildcard idas/*.c)

SUNDIALS_KINSOL := $(patsubst %.c,%.o, \
  $(wildcard $(SUNDIALS)/src/kinsol/[^f]*.c))

SUNDIALS_NVECSERIAL := nvector/serial/nvector_serial.c

ifndef TBB_LIB
TBB = tbb/concurrent_hash_map.cpp tbb/concurrent_queue.cpp tbb/concurrent_vector.cpp tbb/dynamic_link.cpp tbb/itt_notify.cpp tbb/cache_aligned_allocator.cpp tbb/pipeline.cpp tbb/queuing_mutex.cpp tbb/queuing_rw_mutex.cpp tbb/reader_writer_lock.cpp tbb/spin_rw_mutex.cpp tbb/spin_mutex.cpp tbb/critical_section.cpp tbb/task.cpp tbb/tbb_misc.cpp tbb/tbb_misc_ex.cpp tbb/mutex.cpp tbb/recursive_mutex.cpp tbb/condition_variable.cpp tbb/tbb_thread.cpp tbb/concurrent_monitor.cpp tbb/semaphore.cpp tbb/private_server.cpp rml/client/rml_tbb.cpp tbb/task_group_context.cpp tbb/governor.cpp tbb/market.cpp tbb/arena.cpp tbb/scheduler.cpp tbb/observer_proxy.cpp tbb/tbb_statistics.cpp tbb/tbb_main.cpp
else
TBB =
endif

SOURCES = $(SUNDIALS_CVODES) $(SUNDIALS_IDAS) $(SUNDIALS_KINSOL) $(SUNDIALS_NVECSERIAL) init.c
OBJECTS_C = $(SOURCES:.c=.o)
OBJECTS = $(OBJECTS_C:.cpp=.o)
